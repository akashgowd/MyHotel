// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace MyHotel.Models
{
    public partial class HotelwebContext : DbContext
    {
        public HotelwebContext()
        {
        }

        public HotelwebContext(DbContextOptions<HotelwebContext> options)
            : base(options)
        {
        }

        public virtual DbSet<BankAccount> BankAccounts { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<Roombooking> Roombookings { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=DERAKA-39-05-22;Initial Catalog=Hotelweb;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<BankAccount>(entity =>
            {
                entity.ToTable("bank_account");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Balance)
                    .HasColumnType("money")
                    .HasColumnName("balance");

                entity.Property(e => e.Customerid).HasColumnName("customerid");

                entity.HasOne(d => d.Customer)
                    .WithMany(p => p.BankAccounts)
                    .HasForeignKey(d => d.Customerid)
                    .HasConstraintName("FK__bank_acco__custo__656C112C");
            });

            modelBuilder.Entity<Customer>(entity =>
            {
                entity.ToTable("customer");

                entity.Property(e => e.Customerid).HasColumnName("customerid");

                entity.Property(e => e.Address)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("address");

                entity.Property(e => e.Customername)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("customername");

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Password)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("password");

                entity.Property(e => e.Phonenumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("phonenumber");
            });

            modelBuilder.Entity<Payment>(entity =>
            {
                entity.ToTable("payment");

                entity.Property(e => e.Paymentid).HasColumnName("paymentid");

                entity.Property(e => e.Bookingid).HasColumnName("bookingid");

                entity.Property(e => e.Customerid).HasColumnName("customerid");

                entity.Property(e => e.Paymentamt)
                    .HasColumnType("money")
                    .HasColumnName("paymentamt");

                entity.HasOne(d => d.Booking)
                    .WithMany(p => p.Payments)
                    .HasForeignKey(d => d.Bookingid)
                    .HasConstraintName("FK__payment__booking__68487DD7");

                entity.HasOne(d => d.Customer)
                    .WithMany(p => p.Payments)
                    .HasForeignKey(d => d.Customerid)
                    .HasConstraintName("FK__payment__custome__693CA210");
            });

            modelBuilder.Entity<Room>(entity =>
            {
                entity.ToTable("room");

                entity.Property(e => e.Roomid)
                    .ValueGeneratedNever()
                    .HasColumnName("roomid");

                entity.Property(e => e.Available)
                    .HasColumnName("available")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Roomcapacity).HasColumnName("roomcapacity");

                entity.Property(e => e.Roomimage)
                    .HasMaxLength(550)
                    .IsUnicode(false)
                    .HasColumnName("roomimage");

                entity.Property(e => e.Roomprice).HasColumnName("roomprice");

                entity.Property(e => e.Roomtype)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("roomtype");
            });

            modelBuilder.Entity<Roombooking>(entity =>
            {
                entity.HasKey(e => e.Bookingid)
                    .HasName("PK__roombook__C6D307050C1BBAEC");

                entity.ToTable("roombooking");

                entity.Property(e => e.Bookingid).HasColumnName("bookingid");

                entity.Property(e => e.BookingTo)
                    .HasColumnType("datetime")
                    .HasColumnName("bookingTo");

                entity.Property(e => e.Bookingfrom)
                    .HasColumnType("datetime")
                    .HasColumnName("bookingfrom");

                entity.Property(e => e.Customerid).HasColumnName("customerid");

                entity.Property(e => e.Roomid).HasColumnName("roomid");

                entity.HasOne(d => d.Customer)
                    .WithMany(p => p.Roombookings)
                    .HasForeignKey(d => d.Customerid)
                    .HasConstraintName("FK__roombooki__custo__619B8048");

                entity.HasOne(d => d.Room)
                    .WithMany(p => p.Roombookings)
                    .HasForeignKey(d => d.Roomid)
                    .HasConstraintName("FK__roombooki__roomi__628FA481");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}